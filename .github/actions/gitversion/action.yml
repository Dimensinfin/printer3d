name: GitVersion GitVersion
description: Get the project version from the GitVersion tool and the projects commits and set it teporarily to generate the artifact.

outputs:
  semanticVersion:
    description: The selected semanting version for this commit. Currently selected the fullSemVer.
    value: ${{ steps.gitversion.outputs.semanticVersion }}
  appVersion:
    description: The terraform and Kubernetes formatted application version.
    value: ${{ steps.gitversion.outputs.appVersion }}
  releaseVersion:
    description: The corresponding release version for this commit.
    value: ${{ steps.gitversion.outputs.releaseVersion }}

runs:
  using: 'composite'
  steps:
    # G I T V E R S I O N
    - name: Get version from GitVersion tool
      id: gitversion
      shell: bash
      run: |
        gitversion
        echo "semanticVersion=$(gitversion -showvariable FullSemVer)" >> $GITHUB_OUTPUT
        echo "appVersion="$(gitversion -showvariable FullSemVer)" >> $GITHUB_OUTPUT
        echo "releaseVersion="$(gitversion -showvariable MajorMinorPatch)" >> $GITHUB_OUTPUT
