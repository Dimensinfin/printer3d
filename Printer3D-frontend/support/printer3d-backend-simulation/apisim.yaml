simlet: inventory-partlist

delay:
  is: fixedDelay
  timeUnit: milliseconds
  initial: 500
  subsequent: 200

  request:
  - method: GET
  - uriPathPattern: "/api/v1/inventory/parts"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.parts.json"

---

simlet: inventory-partlist

request:
  - method: GET
  - uriPathPattern: "/api/v1/inventory/parts"
  - where: uriQueryParameter
    named: "activesOnly"
    equals: true

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.parts.onlyActive.json"

---

simlet: inventory-updatepart

request:
  - method: PATCH
  - uriPathPattern: "/api/v1/inventory/parts"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/newpart.json"

---

simlet: inventory-newcoil

request:
  - method: POST
  - uriPathPattern: "/api/v1/inventory/coils"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/newcoil.json"

---

simlet: inventory-finishings

request:
  - method: GET
  - uriPathPattern: "/api/v1/inventory/finishings"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.finishings.json"

---

simlet: inventory-coils

request:
  - method: GET
  - uriPathPattern: "/api/v1/inventory/coils"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.coils.json"

---

simlet: production-pendingjobs

request:
  - method: GET
  - uriPathPattern: "/api/v1/production/jobs/pending"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/production.pendingjobs.json"

---

simlet: inventory-machines-cancel-build

request:
  - method: PUT
  - where: uriPathPattern
    matchesIgnoreCase: "/api/v1/inventory/machines/{machineId}/cancelbuild"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.machines.cancelbuild.json"

---

simlet: inventory-machines-complete-build

request:
  - method: PUT
  - where: uriPathPattern
    matchesIgnoreCase: "/api/v1/inventory/machines/{machineId}/completebuild"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.machines.cancelbuild.json"

---

simlet: inventory-machines-start-build

request:
  - method: PUT
  - where: uriPathPattern
    matchesIgnoreCase: "/api/v1/inventory/machines/{machineId}/startbuild/{partId}"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.machines.startbuild.json"

---

simlet: inventory-machines-start-build-v2

request:
  - method: POST
  - where: uriPathPattern
    matchesIgnoreCase: "/api/v2/inventory/machines/{machineId}/startbuild"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.machines.startbuild.json"

---

simlet: inventory-machines-v1

request:
  - method: GET
  - uriPathPattern: "/api/v1/inventory/machines"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.machines.json"

---

simlet: inventory-machines-v2

request:
  - method: GET
  - uriPathPattern: "/api/v2/inventory/machines"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.machines.v2.json"

---

simlet: actuator-info

request:
  - method: GET
  - uriPathPattern: "/actuator/info"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/actuator.info.json"
    
---

simlet: inventory-newrequest

request:
  - method: POST
  - uriPathPattern: "/api/v1/production/requests"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/newrequest.json"

---

simlet: production-open-requests

request:
  - method: GET
  - uriPathPattern: "/api/v1/production/requests"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/production.openrequests.json"

---

simlet: production-request-close

request:
  - method: PUT
  - where: uriPathPattern
    matchesIgnoreCase: "/api/v1/production/requests/{requestId}/close"
  
response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/production.request.close.json"

---

simlet: inventory-newmodel

request:
  - method: POST
  - uriPathPattern: "/api/v1/inventory/models"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/newmodel.json"

---

simlet: inventory-newmodel

request:
  - method: PATCH
  - uriPathPattern: "/api/v1/inventory/models"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/newmodel.json"

---

simlet: inventory-getmodels

request:
  - method: GET
  - uriPathPattern: "/api/v1/inventory/models"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.models.json"

---

simlet: inventory-newpart

request:
  - method: POST
  - uriPathPattern: "/api/v1/inventory/parts"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/newpart.json"
