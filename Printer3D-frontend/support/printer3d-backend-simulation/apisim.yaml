simlet: inventory-deleterequest

request:
- uriPathPattern: "/api/v2/production/requests/{requestId}"
- method: DELETE

responses:
- when:
    request:
    - where: cookie
      named: apiProductionGetOpenRequests_v2
      equals: "404-REQUEST_NOT_FOUND"
  # then
  from: stub
  status: 404
  headers:
  - "Content-Type: application/json"
  body: |+
    {
      "timestamp": "2020-07-14T07:41:22.117152Z",
      "httpStatus": "404 NOT_FOUND",
      "httpStatusCode": 404,
      "httpStatusName": "NOT_FOUND",
      "errorName": "REQUEST_NOT_FOUND",
      "errorCode": "dimensinfin.printer3d.defined.repository.logic",
      "cause": "No Request found while trying to delete the request.",
      "message": "Request record with id [{0}] not found at the repository."
    }
  # otherwise
- from: stub
  status: 200
  headers:
  - "Content-Type: application/json"
  body: |+
    {
      "records": 1
    }

---

simlet: production-open-requests

request:
- uriPathPattern: "/api/v2/production/requests"
- method: GET

responses:
- when:
    request:
    - where: cookie
      named: apiProductionGetOpenRequests_v2
      equals: "200-REQUEST_DELETED"
  # then
  from: stub
  status: 200
  headers:
  - "Content-Type: application/json"
  body: |+
    [{
      "id": "bb451b4b-64f3-47aa-8d8c-8fdcdb6108ef",
      "label": "Complete Slot Car Platform P02",
      "requestDate": "2020-06-29T20:00:00.226181Z",
      "state": "OPEN",
      "contents": [{
              "itemId": "ed36cdfb-e5ae-4275-a163-63b4be4d952c",
              "type": "PART",
              "quantity": 2,
              "missing": 1
          },
          {
              "itemId": "0f789845-cdc6-48ce-a0ce-cbaf63cffab5",
              "type": "MODEL",
              "quantity": 2,
              "missing": 1
          }
      ]
      }
    ]
- from: stub
  status: 200
  headers:
  - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/production.openrequests.v2.json"

---

simlet: inventory-partlist

delay:
  is: fixedDelay
  timeUnit: milliseconds
  initial: 400
  subsequent: 200

request:
  - method: GET
  - uriPathPattern: "/api/v1/inventory/parts"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.parts.json"

---

simlet: inventory-partlist-actives

request:
  - method: GET
  - uriPathPattern: "/api/v1/inventory/parts"
  - where: uriQueryParameter
    named: "activesOnly"
    equals: true

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.parts.onlyActive.json"

---

simlet: inventory-updatepart

request:
  - method: PATCH
  - uriPathPattern: "/api/v1/inventory/parts/group"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/newpart.json"

---

simlet: inventory-updatepart

request:
  - method: PATCH
  - uriPathPattern: "/api/v1/inventory/parts"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/newpart.json"

---

simlet: inventory-newcoil

request:
  - method: POST
  - uriPathPattern: "/api/v1/inventory/coils"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/newcoil.json"

---

simlet: inventory-updatecoil

request:
  - method: PATCH
  - uriPathPattern: "/api/v1/inventory/coils"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/newcoil.json"

---

simlet: inventory-finishings

request:
  - method: GET
  - uriPathPattern: "/api/v1/inventory/finishings"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.finishings.json"

---

simlet: inventory-coils

request:
  - method: GET
  - uriPathPattern: "/api/v1/inventory/coils"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.coils.json"

---

simlet: production-pendingjobs

request:
  - method: GET
  - uriPathPattern: "/api/v1/production/jobs/pending"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/production.pendingjobs.json"

---

simlet: inventory-machines-cancel-build

request:
  - method: PUT
  - where: uriPathPattern
    matchesIgnoreCase: "/api/v1/inventory/machines/{machineId}/cancelbuild"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.machines.cancelbuild.json"

---

simlet: inventory-machines-complete-build

request:
  - method: PUT
  - where: uriPathPattern
    matchesIgnoreCase: "/api/v1/inventory/machines/{machineId}/completebuild"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.machines.cancelbuild.json"

---

simlet: inventory-machines-start-build

request:
  - method: PUT
  - where: uriPathPattern
    matchesIgnoreCase: "/api/v1/inventory/machines/{machineId}/startbuild/{partId}"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.machines.startbuild.json"

---

simlet: inventory-machines-start-build-v2

request:
  - method: POST
  - where: uriPathPattern
    matchesIgnoreCase: "/api/v2/inventory/machines/{machineId}/startbuild"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.machines.startbuild.json"

---

simlet: inventory-machines-v1

request:
  - method: GET
  - uriPathPattern: "/api/v1/inventory/machines"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.machines.json"

---

simlet: inventory-machines-v2

request:
  - method: GET
  - uriPathPattern: "/api/v2/inventory/machines"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.machines.v2.json"

---

simlet: actuator-info

request:
  - method: GET
  - uriPathPattern: "/actuator/info"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/actuator.info.json"
    
---

simlet: inventory-newrequest

request:
  - method: POST
  - uriPathPattern: "/api/v1/production/requests"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/newrequest.json"

---

simlet: production-open-requests

request:
  - method: GET
  - uriPathPattern: "/api/v1/production/requests"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/production.openrequests.json"

---

simlet: production-request-close

request:
  - method: PUT
  - where: uriPathPattern
    matchesIgnoreCase: "/api/v1/production/requests/{requestId}/close"
  
response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/production.request.close.json"

---


simlet: inventory-newmodel

request:
  - method: POST
  - uriPathPattern: "/api/v1/inventory/models"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/newmodel.json"

---

simlet: inventory-newmodel

request:
  - method: PATCH
  - uriPathPattern: "/api/v1/inventory/models"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/newmodel.json"

---

simlet: inventory-getmodels

request:
  - method: GET
  - uriPathPattern: "/api/v1/inventory/models"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/inventory.models.json"

---

simlet: inventory-newpart

request:
  - method: POST
  - uriPathPattern: "/api/v1/inventory/parts"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/newpart.json"

---

simlet: accounting-report-amounts-per-week

delay:
  is: fixedDelay
  timeUnit: milliseconds
  initial: 2000
  subsequent: 2000

request:
  - method: GET
  - uriPathPattern: "/api/v1/accounting/requests/amount/week"

response:
  from: stub
  status: 200
  headers:
    - "Content-Type: application/json"
  body:
    type: text
    file: "${sim.path}/responses/accounting.week.amounts.json"
