{
	"info": {
		"_postman_id": "4d9d45ee-4c7c-47cb-912a-2b870505b91a",
		"name": "Backend",
		"description": "Call to the backend server to test the API.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Support",
			"item": [
				{
					"name": "DeleteAllCoils",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{inventoryv1}}/coils/delete/all",
							"host": [
								"{{backendServer}}{{backendPort}}{{inventoryv1}}"
							],
							"path": [
								"coils",
								"delete",
								"all"
							]
						},
						"description": "Delete all the Coils persisted at the repository."
					},
					"response": []
				},
				{
					"name": "DeleteAllParts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{backendServer}}{{backendPort}}/api/v1/inventory/parts/delete/all",
							"host": [
								"{{backendServer}}{{backendPort}}"
							],
							"path": [
								"api",
								"v1",
								"inventory",
								"parts",
								"delete",
								"all"
							]
						},
						"description": "Deletes all the Parts from the Inventory repository."
					},
					"response": []
				},
				{
					"name": "SetupMachine",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"machineLabel\": \"Ender 3 Pro - B\",\n\t\"partId\": \"9fd4337d-6a4d-47b3-a7ac-a61bd51fad39\",\n\t\"jobInstallmentDate\": \"2020-06-03T02:50:00.0Z\",\n\t\"partInstancesCount\": 3\n}"
						},
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{inventoryv1}}/machines/setup",
							"host": [
								"{{backendServer}}{{backendPort}}{{inventoryv1}}"
							],
							"path": [
								"machines",
								"setup"
							]
						},
						"description": "Sets a predetermined job into the Machine. Used by the acceptance tests to fill the Machine fields that can change when submitting or cancelling build jobs."
					},
					"response": []
				},
				{
					"name": "GetRepositoryRequests",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{productionv1}}/requests/repository",
							"host": [
								"{{backendServer}}{{backendPort}}{{productionv1}}"
							],
							"path": [
								"requests",
								"repository"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteAllRequestsV1",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{productionv1}}/requests/delete/all",
							"host": [
								"{{backendServer}}{{backendPort}}{{productionv1}}"
							],
							"path": [
								"requests",
								"delete",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteAllRequestsV2",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{productionv1}}/requests/v2/delete/all",
							"host": [
								"{{backendServer}}{{backendPort}}{{productionv1}}"
							],
							"path": [
								"requests",
								"v2",
								"delete",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "RequestsTransform",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{productionv1}}/requests/transform",
							"host": [
								"{{backendServer}}{{backendPort}}{{productionv1}}"
							],
							"path": [
								"requests",
								"transform"
							]
						},
						"description": "Move Requests from V1 to V2 and then recalculate the Amount for all the closed requests."
					},
					"response": []
				},
				{
					"name": "SetClosedDate",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{accountingv1}}/requests/closedate/2020-06-17T10:15:31.000Z",
							"host": [
								"{{backendServer}}{{backendPort}}{{accountingv1}}"
							],
							"path": [
								"requests",
								"closedate",
								"2020-06-17T10:15:31.000Z"
							]
						}
					},
					"response": []
				}
			],
			"description": "Support calls only available on development environments and not in Production."
		},
		{
			"name": "Actuators",
			"item": [
				{
					"name": "Actuator-Info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backendServer}}{{backendPort}}/actuator/info",
							"host": [
								"{{backendServer}}{{backendPort}}"
							],
							"path": [
								"actuator",
								"info"
							]
						},
						"description": "Shows the application build information."
					},
					"response": []
				}
			]
		},
		{
			"name": "Inventory",
			"item": [
				{
					"name": "V1",
					"item": [
						{
							"name": "GetParts",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{backendServer}}{{backendPort}}{{inventoryv1}}/parts",
									"host": [
										"{{backendServer}}{{backendPort}}{{inventoryv1}}"
									],
									"path": [
										"parts"
									]
								},
								"description": "Get the complete list of parts from the Inventory respository. There is an optional flag to filter out inactive parts."
							},
							"response": []
						},
						{
							"name": "NewPart",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"8128a07b-b270-4097-99f6-7a6960122f6c\",\n  \"label\": \"PLATAFORMA SLOT 1/32 - Base\",\n  \"description\": \"Base para la plataforma de slot cars.\",\n  \"material\": \"PLA\",\n  \"color\": \"VERDE TRANSPARENTE\",\n  \"buildTime\": 30,\n  \"weight\": 4,\n  \"cost\": 1.0,\n  \"price\": 5.0,\n  \"stockLevel\": 2,\n  \"stockAvailable\": 0,\n  \"imagePath\": \"https://ibb.co/3dGbsRh\",\n  \"modelPath\": \"pieza3.sft\",\n  \"active\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backendServer}}{{backendPort}}{{inventoryv1}}/parts",
									"host": [
										"{{backendServer}}{{backendPort}}{{inventoryv1}}"
									],
									"path": [
										"parts"
									]
								},
								"description": "Creates a new Part at the Inventory repository."
							},
							"response": []
						},
						{
							"name": "GetCoils",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{backendServer}}{{backendPort}}{{inventoryv1}}/coils",
									"host": [
										"{{backendServer}}{{backendPort}}{{inventoryv1}}"
									],
									"path": [
										"coils"
									]
								},
								"description": "Get the complete list of Rolls persisted at the Inventory repository."
							},
							"response": []
						},
						{
							"name": "GetModels",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{backendServer}}{{backendPort}}{{inventoryv1}}/models",
									"host": [
										"{{backendServer}}{{backendPort}}{{inventoryv1}}"
									],
									"path": [
										"models"
									]
								},
								"description": "Get the complete list of **Models** persisted at the Inventory repository."
							},
							"response": []
						},
						{
							"name": "NewPart [400]",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"8128a07b-b270-4097-99f6-7a6960122f6c\",\n  \"label\": \"PLATAFORMA SLOT 1/32 - Base\",\n  \"project\":\"LONGITUD DEL NOMBRE DE PROYECTO COMPLETAMENTE FUERA DE LOS LIMITES PERMITIDOS\",\n  \"description\": \"Base para la plataforma de slot cars.\",\n  \"material\": \"PLA\",\n  \"color\": \"VERDE TRANSPARENTE\",\n  \"buildTime\": 30,\n  \"weight\": 4,\n  \"cost\": 1.0,\n  \"price\": 5.0,\n  \"stockLevel\": 2,\n  \"stockAvailable\": 0,\n  \"imagePath\": \"https://ibb.co/3dGbsRh\",\n  \"modelPath\": \"pieza3.sft\",\n  \"active\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backendServer}}{{backendPort}}{{inventoryv1}}/parts",
									"host": [
										"{{backendServer}}{{backendPort}}{{inventoryv1}}"
									],
									"path": [
										"parts"
									]
								},
								"description": "Try to create a new Part but with some data that makes the request invalid."
							},
							"response": []
						}
					],
					"description": "Endpoints for the initial version of any endpoint."
				},
				{
					"name": "V2",
					"item": [
						{
							"name": "Get Coils V2",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwtToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{backendServer}}{{backendPort}}{{inventoryv2}}/coils",
									"host": [
										"{{backendServer}}{{backendPort}}{{inventoryv2}}"
									],
									"path": [
										"coils"
									]
								},
								"description": "Get the complete list of Coils available on stock. The request automatically filters out exhausted and empty or rejected coils."
							},
							"response": [
								{
									"name": "Get Coils V2",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{backendServer}}{{backendPort}}{{inventoryv2}}/coils",
											"host": [
												"{{backendServer}}{{backendPort}}{{inventoryv2}}"
											],
											"path": [
												"coils"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Request-ID",
											"value": "f1441d84-d372-414a-b140-664b835be6c8"
										},
										{
											"key": "X-Correlation-ID",
											"value": "10cff0d5-9a47-4f1a-be18-838ae6f9f6d7"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "896"
										},
										{
											"key": "Date",
											"value": "Mon, 22 Mar 2021 02:14:23 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": \"2f4fe8d8-fc1b-40fd-b9b2-729100612253\",\n        \"material\": \"PLA\",\n        \"color\": \"BLANCO\",\n        \"colorSet\": \"BLANCO\"\n    },\n    {\n        \"id\": \"cee43a4e-339a-482c-ac60-dd7d13bba5e2\",\n        \"material\": \"PLA\",\n        \"color\": \"NEGRO (uso)\",\n        \"colorSet\": \"NEGRO\"\n    },\n    {\n        \"id\": \"df397fcc-ba76-453c-b896-e58965133787\",\n        \"material\": \"PLA\",\n        \"color\": \"NEGRO\",\n        \"colorSet\": \"NEGRO\"\n    },\n    {\n        \"id\": \"c8afa59f-33e4-4143-a874-1a54a8818b54\",\n        \"material\": \"PLA\",\n        \"color\": \"NEGRO\",\n        \"colorSet\": \"NEGRO\"\n    },\n    {\n        \"id\": \"5d01ccbd-8cb1-4509-8c35-85fda73c4686\",\n        \"material\": \"PLA\",\n        \"color\": \"ROJO\",\n        \"colorSet\": \"ROJO\"\n    },\n    {\n        \"id\": \"be890c79-1d21-415e-8a38-ef20b0288b04\",\n        \"material\": \"PLA\",\n        \"color\": \"AZUL BRILLANTE CLARO\",\n        \"colorSet\": \"AZUL BRILLANTE\"\n    },\n    {\n        \"id\": \"5684eedb-2a96-49e5-b5d7-ca45c4ac8222\",\n        \"material\": \"PLA\",\n        \"color\": \"AZUL BRILLANTE CLARO\",\n        \"colorSet\": \"AZUL BRILLANTE\"\n    }\n]"
								}
							]
						},
						{
							"name": "Get Parts V2",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{backendServer}}{{backendPort}}{{inventoryv2}}/parts",
									"host": [
										"{{backendServer}}{{backendPort}}{{inventoryv2}}"
									],
									"path": [
										"parts"
									]
								},
								"description": "Returns the simple list of the Parts persisted on the repository."
							},
							"response": []
						}
					],
					"description": "Contains the endpoints for the new data backend formats.",
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{jwtToken}}",
								"type": "string"
							}
						]
					}
				},
				{
					"name": "NewPart-409 Duplicated",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"c926da84-258c-47d2-8cc8-859058c6266e\",\n  \"label\": \"PLATAFORMA SLOT 1/32 - Base\",\n  \"description\": \"Base para la plataforma de slot cars. Prueba de duplicado\",\n  \"material\": \"PLA\",\n  \"color\": \"VERDE TRANSPARENTE\",\n  \"buildTime\": 31,\n  \"cost\": 2.0,\n  \"price\": 6.0,\n  \"stockLevel\": 3,\n  \"stockAvailable\": 0,\n  \"imagePath\": \"https://ibb.co/3dGbsRh\",\n  \"modelPath\": \"pieza3.sft\",\n  \"active\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{inventoryv1}}/parts",
							"host": [
								"{{backendServer}}{{backendPort}}{{inventoryv1}}"
							],
							"path": [
								"parts"
							]
						},
						"description": "[P3D01.E.01] If we receive a request with the same label/material/color of another already persisted Part we reject the new insertion\n    with a clear message."
					},
					"response": []
				},
				{
					"name": "New Coil Minimum",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"8328e3ff-1cee-42f1-bd1d-275353debb7d\",\n  \"material\": \"PLA\",\n  \"tradeMark\": \"ESUN\",\n  \"color\": \"VERDE TRANSPARENTE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{inventoryv1}}/coils",
							"host": [
								"{{backendServer}}{{backendPort}}{{inventoryv1}}"
							],
							"path": [
								"coils"
							]
						},
						"description": "Create a new roll at the backend repository."
					},
					"response": []
				},
				{
					"name": "UpdateCoil",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"8328e3ff-1cee-42f1-bd1d-275353debb6d\",\n  \"weight\": 200\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{inventoryv1}}/coils",
							"host": [
								"{{backendServer}}{{backendPort}}{{inventoryv1}}"
							],
							"path": [
								"coils"
							]
						},
						"description": "Updates a Coil. All only field allowed to be changed is the weight."
					},
					"response": []
				},
				{
					"name": "UpdatePart",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"8128a07b-b270-4097-99f6-7a6960122f6c\",\n  \"label\": \"PLATAFORMA SLOT 1/32 - Base Modificada\",\n  \"description\": \"Base para la plataforma de slot cars.\",\n  \"material\": \"PLA\",\n  \"color\": \"MORADO TRANSPARENTE\",\n  \"buildTime\": 30,\n  \"cost\": 3.0,\n  \"price\": 6.0,\n  \"stockLevel\": 2,\n  \"stockAvailable\": 0,\n  \"imagePath\": \"https://ibb.co/3dGbsRh\",\n  \"modelPath\": \"pieza3.sft\",\n  \"active\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{inventoryv1}}/parts",
							"host": [
								"{{backendServer}}{{backendPort}}{{inventoryv1}}"
							],
							"path": [
								"parts"
							]
						},
						"description": "Updates a Model. All the fields are editable but the id. So the endpoint just replaces the contents."
					},
					"response": []
				},
				{
					"name": "NewModel",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"f655ceec-d203-4631-be7d-c73535f6469e\",\n  \"label\": \"PLATAFORMA SLOT 1/2 Verde\",\n  \"price\": 4,\n  \"stockLevel\": 3,\n  \"partIdList\": [\n    \"a12ec0be-52a4-424f-81e1-70446bc38372\",\"a12ec0be-52a4-424f-81e1-70446bc38372\",\"9fd4337d-6a4d-47b3-a7ac-a61bd51fad39\",\"2f780382-e539-4945-87ea-354bdd7879ce\",\"2f780382-e539-4945-87ea-354bdd7879ce\",\"2f780382-e539-4945-87ea-354bdd7879ce\",\"2f780382-e539-4945-87ea-354bdd7879ce\"\n  ],\n  \"imagePath\": \"https://ibb.co/3dGbsRh\"\n}"
						},
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{inventoryv1}}/models",
							"host": [
								"{{backendServer}}{{backendPort}}{{inventoryv1}}"
							],
							"path": [
								"models"
							]
						},
						"description": "Creates a new Model. The initial model has no parts associated because that is edited on a second UI. On this endpoint we set all the other Model fields."
					},
					"response": []
				},
				{
					"name": "UpdateModel",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"dda12806-2a1e-4a13-89c8-3bf0f23e5ffc\",\n  \"label\": \"PLATAFORMA SLOT 1/2 Azul\",\n  \"price\": 25,\n  \"stockLevel\": 12,\n  \"partIdList\": [\n    \"eb80222b-efeb-4d90-9be7-1a0850338e5e\",\n    \"8d2853ca-ebf6-443e-b705-89f7a5149d37\"\n  ],\n  \"imagePath\": \"https://ibb.co/3dGbsRh\"\n}"
						},
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{inventoryv1}}/models",
							"host": [
								"{{backendServer}}{{backendPort}}{{inventoryv1}}"
							],
							"path": [
								"models"
							]
						},
						"description": "Updates a Model. All the fields are editable but the id. So the endpoint just replaces the contents."
					},
					"response": []
				},
				{
					"name": "UpdatePart",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"64c26e80-6b5f-4ce5-a77b-6a0c58f853ae\",\n  \"label\": \"Covid-19 Key\",\n  \"description\": \"This is a key to be used to isolate contact with surfaces and buttons. Use it to open doors and push buttons.\",\n  \"material\": \"PLA\",\n  \"colorCode\": \"NARANJA-T\",\n  \"buildTime\": 30,\n  \"cost\": 0.85,\n  \"price\": 3,\n  \"stockLevel\": 5,\n  \"stockAvailable\": 0,\n  \"imagePath\": \"https://ibb.co/3dGbsRh\",\n  \"modelPath\": \"pieza3.sft\",\n  \"active\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{backendServer}}{{backendPort}}/api/v1/inventory/parts/{{partId}}",
							"host": [
								"{{backendServer}}{{backendPort}}"
							],
							"path": [
								"api",
								"v1",
								"inventory",
								"parts",
								"{{partId}}"
							]
						},
						"description": "Updated some of the fields of the Part on the persistence repository."
					},
					"response": []
				},
				{
					"name": "Finishings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{inventoryv1}}/finishings",
							"host": [
								"{{backendServer}}{{backendPort}}{{inventoryv1}}"
							],
							"path": [
								"finishings"
							]
						},
						"description": "The list of materials and their color to be used to register new Parts."
					},
					"response": []
				},
				{
					"name": "GetMachines v2",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{inventoryv2}}/machines",
							"host": [
								"{{backendServer}}{{backendPort}}{{inventoryv2}}"
							],
							"path": [
								"machines"
							]
						},
						"description": "Version 2 of the lsit of Machines.\nThe build job information is now on a separate block of information."
					},
					"response": []
				},
				{
					"name": "StartBuild v2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"partCount\": 2,\n  \"jsonClass\": \"Job\",\n  \"expanded\": false,\n  \"selected\": false,\n  \"themeColor\": \"WHITE\",\n  \"priority\": 2,\n  \"aggregatedCount\": 5,\n  \"id\": \"4401940f-41c9-4941-851c-9bcd3a27f951\",\n  \"part\": {\n    \"jsonClass\": \"Part\",\n    \"expanded\": false,\n    \"selected\": false,\n    \"themeColor\": \"WHITE\",\n    \"id\": \"96d71bb4-e081-4d09-8162-f705803d9efe\",\n    \"label\": \"Pieza pequeña\",\n    \"description\": null,\n    \"material\": \"PLA\",\n    \"color\": \"ROJO\",\n    \"buildTime\": 2,\n    \"cost\": 1,\n    \"price\": 2,\n    \"stockLevel\": 5,\n    \"stockAvailable\": 0,\n    \"imagePath\": null,\n    \"modelPath\": null,\n    \"active\": true\n  },\n  \"partId\": \"4e7001ee-6bf5-40b4-9c15-61802e4c59ea\"\n}"
						},
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{inventoryv2}}/machines/{{machineId}}/startbuild",
							"host": [
								"{{backendServer}}{{backendPort}}{{inventoryv2}}"
							],
							"path": [
								"machines",
								"{{machineId}}",
								"startbuild"
							]
						}
					},
					"response": []
				},
				{
					"name": "CompleteBuild",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{inventoryv1}}/machines/{{machineId}}/completebuild",
							"host": [
								"{{backendServer}}{{backendPort}}{{inventoryv1}}"
							],
							"path": [
								"machines",
								"{{machineId}}",
								"completebuild"
							]
						}
					},
					"response": []
				},
				{
					"name": "CancelBuild",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{inventoryv1}}/machines/{{machineId}}/cancelbuild",
							"host": [
								"{{backendServer}}{{backendPort}}{{inventoryv1}}"
							],
							"path": [
								"machines",
								"{{machineId}}",
								"cancelbuild"
							]
						},
						"description": "Requests to clear the Machine data representing the current build Job."
					},
					"response": []
				}
			]
		},
		{
			"name": "Production",
			"item": [
				{
					"name": "V1",
					"item": [
						{
							"name": "New Request V1",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"33edb6fc-c41f-40df-b969-46266665911c\",\n  \"label\": \"Order from Office 03\",\n  \"requestDate\": \"2020-06-16T01:13:50.083419+02:00\",\n  \"partList\": [\n    {\n      \"partId\": \"8128a07b-b270-4097-99f6-7a6960122f6c\",\n      \"quantity\": 1\n    }\n  ],\n  \"state\": \"OPEN\"\n}"
								},
								"url": {
									"raw": "{{backendServer}}{{backendPort}}{{productionv1}}/requests",
									"host": [
										"{{backendServer}}{{backendPort}}{{productionv1}}"
									],
									"path": [
										"requests"
									]
								},
								"description": "Customers that buy Parts will fill a request form. This form is processed and if all the Parts requested are found at the stock then the Request can be send and it will be closed. If there are missing Parts then priority jobs will be listed and the Requests stays open."
							},
							"response": []
						}
					]
				},
				{
					"name": "V2",
					"item": [
						{
							"name": "New Request V2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"requestDate\", new Date());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"3cf59765-e4e4-45cd-8684-7046095ceb01\",\n    \"label\": \"Order from Postman 01\",\n    \"customer\": \"No data\",\n    \"requestDate\": \"{{requestDate}}\",\n    \"contents\": [\n        {\n            \"itemId\": \"2e8a2b63-34da-48b1-8fc0-c6eeebac3394\",\n            \"type\": \"PART\",\n            \"quantity\": 1,\n            \"missing\": 1\n        },\n        {\n            \"itemId\": \"b3d6e72f-76ca-4207-81ee-f5927426bd87\",\n            \"type\": \"MODEL\",\n            \"quantity\": 1,\n            \"missing\": 1\n        }\n    ],\n    \"total\": 16.0\n}"
								},
								"url": {
									"raw": "{{backendServer}}{{backendPort}}{{productionv2}}/requests",
									"host": [
										"{{backendServer}}{{backendPort}}{{productionv2}}"
									],
									"path": [
										"requests"
									]
								},
								"description": "Customers that buy Parts will fill a request form. This form is processed and if all the Parts requested are found at the stock then the\n        Request can be send and it will be closed. If there are missing Parts then priority jobs will be listed and the Requests stays open."
							},
							"response": []
						},
						{
							"name": "NewRequest V2-400 Bad Request",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"33edb6fc-c41f-40df-b969-46266665911c\",\n  \"requestDate\": \"2020-06-16T01:13:50.083419+02:00\",\n  \"contents\": [\n    {\n      \"itemId\": \"f655ceec-d203-4631-be7d-c73535f6469e\",\n      \"type\": \"MODEL\",\n      \"quantity\": 3\n    },{\n      \"itemId\": \"8128a07b-b270-4097-99f6-7a6960122f6c\",\n      \"type\": \"PART\",\n      \"quantity\": 2\n    }\n  ],  \"state\": \"OPEN\"\n}"
								},
								"url": {
									"raw": "{{backendServer}}{{backendPort}}{{productionv2}}/requests",
									"host": [
										"{{backendServer}}{{backendPort}}{{productionv2}}"
									],
									"path": [
										"requests"
									]
								},
								"description": "If the request to create a new requst has not all the required fields or they do not pass the validations then we reject the request\n            with a bad format request exception. The response message should explain the cause for the rejection."
							},
							"response": []
						},
						{
							"name": "Get Requests V2",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{backendServer}}{{backendPort}}{{productionv2}}/requests",
									"host": [
										"{{backendServer}}{{backendPort}}{{productionv2}}"
									],
									"path": [
										"requests"
									]
								},
								"description": "        Get the complete list of **Requests** persisted at the Production repository and that are on an Open state.\n        This method is compatible with the implementation of Requests V1 until the repository V1 is deprecated and defiled.\n        The process now extends to support Models that are packs of Parts. The new extension expands the list from the Model BOM to check agains\n        the current stock of Parts to check for run out of instances. Complete requests continue to be marked COMPLETED.\n        During the processing each of the requests in FIFO sequence is processed against the Part stocks. If there are stocks for all the Parts in\n        the request the state changes to COMPLETED during this request. The Part stocks are updated for each Request processed.\n"
							},
							"response": []
						}
					]
				},
				{
					"name": "V3",
					"item": [
						{
							"name": "Get Open Requests V3",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{backendServer}}{{backendPort}}{{productionv3}}/requests/open",
									"host": [
										"{{backendServer}}{{backendPort}}{{productionv3}}"
									],
									"path": [
										"requests",
										"open"
									]
								},
								"description": "Get the complete list of **Open Requests** persisted at the Production repository. Open requests are those that are in the **OPEN** or **COMPLETED** states, meaning that are still on production and not delivered to the customer.\n\nDuring the processing each of the requests in FIFO sequence is processed against the Part stocks. If there are stocks for all the Parts in the request the state changes to COMPLETED during this request. The Part stocks are updated for each Request processed."
							},
							"response": []
						},
						{
							"name": "Get Closed Requests V3",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{backendServer}}{{backendPort}}{{productionv3}}/requests/closed",
									"host": [
										"{{backendServer}}{{backendPort}}{{productionv3}}"
									],
									"path": [
										"requests",
										"closed"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deliver Request V3",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{backendServer}}{{backendPort}}{{productionv3}}/requests/103477e5-de44-4542-90d4-d08e44b2f6c0/deliver",
									"host": [
										"{{backendServer}}{{backendPort}}{{productionv3}}"
									],
									"path": [
										"requests",
										"103477e5-de44-4542-90d4-d08e44b2f6c0",
										"deliver"
									]
								},
								"description": "Changes the state of the Customer Request to the DELIVERED state. This means that the Request is fulfilled and that all elements are available and packaged ready to be delivered to the Customer.\n\nAt this moment the Request may be unpaid and then the request moved to the **DELIVERED** state and it is left pending payment registration or it is paid and then the Request ends its flow because it can be moved directly to the **CLOSED** state after registering delivery date."
							},
							"response": []
						},
						{
							"name": "Delete Request V3",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{backendServer}}{{backendPort}}{{productionv3}}/requests/3cf59765-e4e4-45cd-8684-7046095ceb01",
									"host": [
										"{{backendServer}}{{backendPort}}{{productionv3}}"
									],
									"path": [
										"requests",
										"3cf59765-e4e4-45cd-8684-7046095ceb01"
									]
								},
								"description": "Requests have no other relations with repository records so they can be deleted safely. If the user select to remove a Request because it should be modified of because no longer required the record can be deleted without impact. Deleted requests will be markes and removed from listings and later anotehr process will definitively remove the record from the repository."
							},
							"response": []
						},
						{
							"name": "Delete Request V3 - CONFLICT",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{backendServer}}{{backendPort}}{{productionv3}}/requests/103477e5-de44-4542-90d4-d08e44b2f6c0",
									"host": [
										"{{backendServer}}{{backendPort}}{{productionv3}}"
									],
									"path": [
										"requests",
										"103477e5-de44-4542-90d4-d08e44b2f6c0"
									]
								},
								"description": "Requests have no other relations with repository records so they can be deleted safely. If the user select to remove a Request because it should be modified of because no longer required the record can be deleted without impact. Deleted requests will be marked and removed from listings and later another process will definitively remove the record from the repository.\n\nThis request will fail with HTTP error 409 - CONFLICT beacuse DELIVERED requests cannot be deleted."
							},
							"response": []
						}
					]
				},
				{
					"name": "CloseRequest",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{productionv2}}/requests/d157d5dc-fa32-4054-bce8-0e72c02d49f0/close",
							"host": [
								"{{backendServer}}{{backendPort}}{{productionv2}}"
							],
							"path": [
								"requests",
								"d157d5dc-fa32-4054-bce8-0e72c02d49f0",
								"close"
							]
						}
					},
					"response": []
				},
				{
					"name": "StartBuild",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{inventoryv1}}/machines/{{machineId}}/startbuild/{{partId}}",
							"host": [
								"{{backendServer}}{{backendPort}}{{inventoryv1}}"
							],
							"path": [
								"machines",
								"{{machineId}}",
								"startbuild",
								"{{partId}}"
							]
						},
						"description": "Requests to start counting the time to build a new Part. This means the Machine is in use and that it should be working."
					},
					"response": []
				},
				{
					"name": "JobsPending",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{productionv1}}/jobs/pending",
							"host": [
								"{{backendServer}}{{backendPort}}{{productionv1}}"
							],
							"path": [
								"jobs",
								"pending"
							]
						},
						"description": "The virtual list of jobs that the system has calculated that are required to reach the Inventory targets."
					},
					"response": []
				},
				{
					"name": "StartBuild V2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"009ab011-03ad-4e84-9a88-25708d1cfd64\",\n  \"partId\": \"8128a07b-b270-4097-99f6-7a6960122f6c\",\n  \"copies\": 2\n}"
						},
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{inventoryv2}}/machines/{{machineId}}/startbuild",
							"host": [
								"{{backendServer}}{{backendPort}}{{inventoryv2}}"
							],
							"path": [
								"machines",
								"{{machineId}}",
								"startbuild"
							]
						},
						"description": "With this command the **Machine** will be active and building one new instance of the referenced Part model. The front end will not allow\n        setting new jobs until this ends or it is cancelled.\n        At this moment the plastic quantity that is required to build the Part is subtracted from a Coil with the same finishing. If there are more\n        than a single coil with the same finishing one of them is used indistinctly."
					},
					"response": []
				}
			],
			"description": "Stores Production endpoints"
		},
		{
			"name": "Accounting",
			"item": [
				{
					"name": "Get Amounts Week",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"1"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{accountingv1}}/requests/amount/week",
							"host": [
								"{{backendServer}}{{backendPort}}{{accountingv1}}"
							],
							"path": [
								"requests",
								"amount",
								"week"
							]
						},
						"description": "Get the aggregated request amounts for the requests closed during a week. Get the <weekCount> most recent records."
					},
					"response": []
				},
				{
					"name": "Export CVS Request Data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{backendServer}}{{backendPort}}{{accountingv1}}/requests/data",
							"host": [
								"{{backendServer}}{{backendPort}}{{accountingv1}}"
							],
							"path": [
								"requests",
								"data"
							]
						},
						"description": "Generates a CVS response that should generate a CSV file at the user browser."
					},
					"response": []
				}
			],
			"description": "The API information unit to manage historical, trending and aggregates data mining endpoints."
		},
		{
			"name": "GetParts-filter active",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{backendServer}}{{backendPort}}/api/v1/inventory/parts?activesOnly=true",
					"host": [
						"{{backendServer}}{{backendPort}}"
					],
					"path": [
						"api",
						"v1",
						"inventory",
						"parts"
					],
					"query": [
						{
							"key": "activesOnly",
							"value": "true"
						}
					]
				},
				"description": "Get the list of active Parts from the Inventory repository."
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "requestDate",
			"value": ""
		}
	]
}