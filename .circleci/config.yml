# - C I R C L E C I   C O N T I N U O U S   I N T E G R A T I O N
# Download, compile, test and deploy to the production server at Heroku.
# CircleCI has the ability to deploy to Heroku and integrate more than one
#   project on the same pipeline.
# V1:
# Start creationg the workflow to clone the repository, then build the 'frontend'
#   module of the project.
version: 2.1
jobs:
  start-job:
    docker:
      - image: circleci/node:12.16.3-browsers
      - image: circleci/openjdk:11.0.1-jdk
      - image: circleci/postgres:11.1
    steps:
      - run:
          name: Start-Frontend Environment Validation
          command: |
            node -v
  create-frontend-environment-job:
    docker:
      - image: circleci/node:12.16.3-browsers
    steps:
      - run:
          name: Start-Frontend Environment Validation
          command: |
            node -v
      - checkout
      - run:
          name: Validate node version in use and install
          working_directory: Printer3D-frontend
          command: |
            echo '>> Printer3D - frontend: Validate environment version and store cache'
            node -v
            npm install
      - save_cache:
          paths:
            - ~/project/Printer3D-frontend/node_modules
          key: printer3d-frontend-{{ checksum "~/project/Printer3D-frontend/package.json" }}
  create-backend-environment-job:
    docker:
      - image: circleci/openjdk:11.0.1-jdk
    steps:
      - checkout
      - run:
          name: Start-Backend Environment Validation
          environment:
            # Configure the JVM and Gradle to avoid OOM errors
            _JAVA_OPTIONS: "-Xmx3g"
            GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
          command: |
            ~/project/Printer3D-backend/gradlew -version
      - run:
          name: BACKEND - Build SpringBoot code
          working_directory: Printer3D-backend
          command: |
            ./gradlew clean bootJar
      - save_cache:
          paths:
            - ~/project/Printer3D-backend/.gradle
          key: printer3d-backend-{{ checksum "~/project/Printer3D-backend/gradle/wrapper/gradle-wrapper.properties" }}
  build-frontend-job:
    docker:
      - image: circleci/node:12.16.3-browsers
    environment:
      # Customize the environment values to use on the jobs
      PORT: 5100
    steps:
      - checkout
      - restore_cache:
          key: printer3d-frontend-{{ checksum "~/project/Printer3D-frontend/package.json" }}
      - run:
          name: FRONTEND - Build deployment code
          working_directory: Printer3D-frontend
          command: |
            npm run build:prod
      - run:
          name: FRONTEND - Test application
          working_directory: Printer3D-frontend
          command: |
            npm run test:prod
      - save_cache:
          paths:
            - ~/project/Printer3D-frontend/node_modules
          key: printer3d-frontend-{{ checksum "~/project/Printer3D-frontend/package.json" }}
      - save_cache:
          paths:
            - ~/project/Printer3D-frontend/deploy
          key: printer3d-frontend-deploy
  build-backend-job:
    docker:
      - image: circleci/openjdk:11-jdk
    steps:
      - checkout
      - restore_cache:
          key: printer3d-backend-{{ checksum "~/project/Printer3D-backend/gradle/wrapper/gradle-wrapper.properties" }}
      - run:
          name: BACKEND - Build SpringBoot code
          working_directory: Printer3D-backend
          command: |
            ./gradlew clean bootJar build
      - save_cache:
          paths: 
            - ~/project/Printer3D-backend/.gradle
          key: printer3d-backend-{{ checksum "~/project/Printer3D-backend/gradle/wrapper/gradle-wrapper.properties" }}
      - store_artifacts:
          path: ~/project/Printer3D-backend/build/libs
  test-backend-job:
    docker:
      - image: circleci/openjdk:11-jdk
    environment:
      PORT: 5110
    steps:
      - checkout
      - restore_cache:
          key: printer3d-backend-{{ checksum "~/project/Printer3D-backend/gradle/wrapper/gradle-wrapper.properties" }}
      - run:
          name: BACKEND - Unit Testing application
          working_directory: Printer3D-backend
          command: |
            ./gradlew test
  backend-deploy-to-heroku:
    docker:
      - image: heroku/heroku
    environment:
      HEROKU_APP_NAME: printer3d-backend
      HEROKU_API_KEY: 0898c4c7-7389-4023-940b-ba5d7d799f73
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

  create-acceptance-app-container:
    docker:
      - image: circleci/openjdk:11-jdk
    environment:
      PORT: 5110
    steps:
      - checkout
      - restore_cache:
          key: printer3d-backend-{{ checksum "~/project/Printer3D-backend/gradle/wrapper/gradle-wrapper.properties" }}
      - run:
          name: BACKEND - Create acceptance jar
          working_directory: Printer3D-backend
          command: |
            ./gradlew clean bootJar
      - run:
          name: BACKEND - Create application container
          working_directory: Printer3D-backend
          command: |
            ./docker-service.sh backend generate
      - save_cache:
          paths:
            - ~/Printer3D-backend/build
          key: printer3d-backend-{{ checksum "~/project/Printer3D-backend/docker-service.sh" }}
      - store_artifacts:
          path: ~/project/Printer3D-backend/build/libs
  start-support-backend-job:
    docker:
      - image: circleci/openjdk:11-jdk
      - image: circleci/postgres:11.1
    environment:
      # Customize the environment values to use on the jobs
      PORT: 5110
    steps:
      - checkout
      - restore_cache:
          keys:
            - printer3d-backend-{{ checksum "~/project/Printer3D-backend/dependencies.gradle" }}
            - printer3d-backend-{{ checksum "~/project/Printer3D-backend/docker-service.sh" }}
            - printer3d-backend-
      - run:
          name: BACKEND - Support checks
          working_directory: Printer3D-backend
          command: |
            echo "... Print a api simulator test."

workflows:
  version: 2
  printer3d-deploy:
    jobs:
      - start-job:
          filters:
            branches:
              only:
                - experimental
                - development
                - test
                - master
      - create-frontend-environment-job:
          requires:
            - start-job
          filters:
            branches:
              only:
                - experimental
      - create-backend-environment-job:
          requires:
            - start-job
          filters:
            branches:
              only:
                - experimental
      - build-frontend-job:
          requires:
            - start-job
          filters:
            branches:
              only:
                - development
      - build-backend-job:
          requires:
            - start-job
          filters:
            branches:
              only:
                - development
      - test-backend-job:
          requires:
            - build-backend-job
          filters:
            branches:
              only:
                - development
      - backend-deploy-to-heroku:
          requires:
            - test-backend-job
          filters:
            branches:
              only:
                - development
      # - create-acceptance-app-container:
      #     requires:
      #       - build-backend-job
      #     filters:
      #       branches:
      #         only:
      #           - development
      #           - test
      # - start-support-backend-job:
      #     requires:
      #       - create-acceptance-app-container
      #     filters:
      #       branches:
      #         only:
      #           - development
      # - backend-test-job:
      #     requires:
      #       - start-support-backend-job
      #     filters:
      #       branches:
      #         only:
      #           - development
      #           - test
