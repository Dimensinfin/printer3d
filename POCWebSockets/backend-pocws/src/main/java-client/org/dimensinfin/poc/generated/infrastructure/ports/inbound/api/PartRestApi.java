/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.4.0). https://openapi-generator.tech Do not edit the
 * class manually.
 */
package org.dimensinfin.poc.generated.infrastructure.ports.inbound.api;

import java.util.List;
import javax.annotation.Generated;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import org.dimensinfin.poc.generated.infrastructure.ports.inbound.domain.PartDto;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.validation.Valid;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-12-02T15:14:49.136846+01:00[Europe/Madrid]")
@Validated
@Tag(name = "PartRest", description = "the PartRest API")
public interface PartRestApi {

	/**
	 * POST /v1/parts : Create a new Part on the repository.
	 *
	 * @param partDto Contains the Part fields to be used to create a new Part record at the repository.  (optional)
	 * @return Create a new Part on the Inventory repository.  (status code 201)
	 */
	@Operation(
			operationId = "createPart",
			summary = "Create a new Part on the repository.",
			tags = { "PartRest" },
			responses = {
					@ApiResponse(responseCode = "201", description = "Create a new Part on the Inventory repository. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = PartDto.class)))
			}
	)
	@RequestMapping(
			method = RequestMethod.POST,
			value = "/v1/parts",
			produces = { "application/json" },
			consumes = { "application/json" }
	)
	ResponseEntity<PartDto> createPart(
			@Parameter(name = "PartDto", description = "Contains the Part fields to be used to create a new Part record at the repository. ", schema = @Schema(description = "")) @Valid @RequestBody(required = false) PartDto partDto
	);


	/**
	 * GET /v1/parts : Get all Parts on the repository.
	 *
	 * @return The list of Parts persisted at the Inventory repository.  (status code 200)
	 */
	@Operation(
			operationId = "listParts",
			summary = "Get all Parts on the repository.",
			tags = { "PartRest" },
			responses = {
					@ApiResponse(responseCode = "200", description = "The list of Parts persisted at the Inventory repository. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = PartDto.class)))
			}
	)
	@RequestMapping(
			method = RequestMethod.GET,
			value = "/v1/parts",
			produces = { "application/json" }
	)
	ResponseEntity<List<PartDto>> listParts(

	);

}
