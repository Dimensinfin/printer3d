/*
 * Parts API
 * API for managing parts
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.dimensinfin.poc.generated.infrastructure.ports.inbound.domain;

import java.util.Objects;
import java.util.UUID;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.Valid; .validation.Valid;

/**
* PartDto
*/
    @JsonPropertyOrder({
        PartDto.JSON_PROPERTY_ID,
        PartDto.JSON_PROPERTY_NAME,
        PartDto.JSON_PROPERTY_WEIGHT
    })
            @JsonTypeName("Part")
@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-12-02T11:48:29.878341+01:00[Europe/Madrid]")
public class PartDto {
        public static final String JSON_PROPERTY_ID = "id";
    @.annotation.Nonnull
            private UUID id;

        public static final String JSON_PROPERTY_NAME = "name";
    @.annotation.Nullable
            private String name;

        public static final String JSON_PROPERTY_WEIGHT = "weight";
    @.annotation.Nullable
            private Integer weight;

public PartDto() {
}

        public PartDto id(@.annotation.Nonnull UUID id) {
        
        this.id = id;
        return this;
        }

    /**
        * Get id
    * @return id
    */
    @.annotation.Nonnull
        @NotNull @Valid@Pattern(regexp = "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}")
        @Schema(example = "4e7001ee-6bf5-40b4-9c15-61802e4c59ea", requiredMode = Schema.RequiredMode.REQUIRED, description = "")
      @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public UUID getId() {
        return id;
    }


          @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@.annotation.Nonnull UUID id) {
            this.id = id;
        }

        public PartDto name(@.annotation.Nullable String name) {
        
        this.name = name;
        return this;
        }

    /**
        * Get name
    * @return name
    */
    @.annotation.Nullable
        
        @Schema(example = "Lowerside", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
      @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getName() {
        return name;
    }


          @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@.annotation.Nullable String name) {
            this.name = name;
        }

        public PartDto weight(@.annotation.Nullable Integer weight) {
        
        this.weight = weight;
        return this;
        }

    /**
        * Get weight
    * @return weight
    */
    @.annotation.Nullable
        
        @Schema(example = "20", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
      @JsonProperty(JSON_PROPERTY_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getWeight() {
        return weight;
    }


          @JsonProperty(JSON_PROPERTY_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWeight(@.annotation.Nullable Integer weight) {
            this.weight = weight;
        }

@Override
public boolean equals(Object o) {
    if (this == o) {
    return true;
    }
    if (o == null || getClass() != o.getClass()) {
    return false;
    }
        PartDto part = (PartDto) o;
        return Objects.equals(this.id, part.id) &&
        Objects.equals(this.name, part.name) &&
        Objects.equals(this.weight, part.weight);
}

    @Override
    public int hashCode() {
        return Objects.hash(id, name, weight);
    }

    @Override
    public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PartDto {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("}");
    return sb.toString();
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
    if (o == null) {
    return "null";
    }
    return o.toString().replace("\n", "\n    ");
    }

    }

